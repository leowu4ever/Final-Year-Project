//
// Generated by JTB 1.3.2
//

package timelinedata.visitor;
import timelinedata.syntaxtree.*;
import java.util.*;

/**
 * All GJ visitors must implement this interface.
 */

public interface GJVisitor<R,A> {

   //
   // GJ Auto class visitors
   //

   public R visit(NodeList n, A argu);
   public R visit(NodeListOptional n, A argu);
   public R visit(NodeOptional n, A argu);
   public R visit(NodeSequence n, A argu);
   public R visit(NodeToken n, A argu);

   //
   // User-generated visitor methods below
   //

   /**
    * nodeOptional -> ( OptionList() )?
    * nodeListOptional -> ( Variable() )*
    * nodeToken -> <EOF>
    */
   public R visit(Goal n, A argu);

   /**
    * nodeList -> ( Option() )+
    */
   public R visit(OptionList n, A argu);

   /**
    * nodeToken -> "Playback"
    * nodeToken1 -> "="
    * playbackChoice -> PlaybackChoice()
    */
   public R visit(Option n, A argu);

   /**
    * nodeChoice -> PlaybackChoiceFrames()
    *       | PlaybackChoiceTime()
    */
   public R visit(PlaybackChoice n, A argu);

   /**
    * integerLiteral -> IntegerLiteral()
    * nodeToken -> "FPS"
    */
   public R visit(PlaybackChoiceFrames n, A argu);

   /**
    * nodeToken -> "Real-time"
    */
   public R visit(PlaybackChoiceTime n, A argu);

   /**
    * nodeToken -> "Variable"
    * identifier -> Identifier()
    * nodeList -> ( Vertex() )+
    */
   public R visit(Variable n, A argu);

   /**
    * nodeToken -> "Vertex"
    * floatingPointLiteral -> FloatingPointLiteral()
    * floatingPointLiteral1 -> FloatingPointLiteral()
    * floatingPointLiteral2 -> FloatingPointLiteral()
    * floatingPointLiteral3 -> FloatingPointLiteral()
    * floatingPointLiteral4 -> FloatingPointLiteral()
    * floatingPointLiteral5 -> FloatingPointLiteral()
    */
   public R visit(Vertex n, A argu);

   /**
    * nodeToken -> <IDENTIFIER>
    */
   public R visit(Identifier n, A argu);

   /**
    * nodeToken -> <FLOATING_POINT_LITERAL>
    */
   public R visit(FloatingPointLiteral n, A argu);

   /**
    * nodeToken -> <INTEGER_LITERAL>
    */
   public R visit(IntegerLiteral n, A argu);

}
